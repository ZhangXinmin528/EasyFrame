apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"

    //okhttp
    api "com.squareup.okhttp3:okhttp:$rootProject.okhttp3Version"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3Version"

    //retrofit2
    api "com.squareup.retrofit2:retrofit:$rootProject.retrofit2Version"
    api "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2Version"
    api "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.retrofit2_rxjava2_adapter"

    //dagger2
    api "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerCompilerVersion"

    //// if you use the support libraries
    api "com.google.dagger:dagger-android-support:$rootProject.daggerAndroidVersion"
}
